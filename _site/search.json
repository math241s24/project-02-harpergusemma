[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "",
    "text": "library(tidyverse)\nlibrary(readr)"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "Dataset",
    "text": "Dataset\n\nbristolbaydata &lt;- read.csv(\"salmondata/rawsalmon.csv\")"
  },
  {
    "objectID": "proposal.html#high-level-goal",
    "href": "proposal.html#high-level-goal",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "High Level Goal",
    "text": "High Level Goal\nTo create an interactive visualization that allows people to explore how various environmental factors and policy changes affect the salmon population in Bristol Bay."
  },
  {
    "objectID": "proposal.html#reason-for-choosing-this-dataset",
    "href": "proposal.html#reason-for-choosing-this-dataset",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "Reason for Choosing this Dataset",
    "text": "Reason for Choosing this Dataset\nWe chose these data because we think it provides a lot of information across both spatial and temporal scales about salmon populations that could reflect some interesting environmental and political variables and that could make for an interesting visualization. We all have pretty environmentally focused interests, so we thought it could be cool to examine an environmental question for this project.\nThe variables included in the Alaska Fish Tickets dataset are all quite useful for our analysis. For every year from 1985 to 2023, there are observations for multiple rivers across the Bristol Bay area that include the counts of pounds of landed salmon, their estimated fish counts, and the counts of fishing vessels, processors, and issued permits. This dataset is not tidy, as there are multiple observations for each year, so we’ll need to widen it so that one observation is a single year and the different rivers are all columns."
  },
  {
    "objectID": "proposal.html#questions-and-analysis-plan",
    "href": "proposal.html#questions-and-analysis-plan",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "Questions and Analysis Plan",
    "text": "Questions and Analysis Plan\nOur question: How do different fish populations change over time in Bristol Bay in accordance with different policy changes?\nOur plan to answer this question is to merge the different datasets containing information about fish populations, add a variable depicting what policies were in place during the times that each population was measured, and then we plan to create an interactive map that shows how the populations changed over time using leaflet that will be organized by different salmon populations and different policies in place."
  },
  {
    "objectID": "proposal.html#plan-of-attack",
    "href": "proposal.html#plan-of-attack",
    "title": "Fish populations in Bristol Bay, AK",
    "section": "Plan of Attack",
    "text": "Plan of Attack\nWeek 11:\n\nTidy the dataset (Harper)\nIdentify relevant policy changes around Bristol Bay (Gus)\nGet environmental data to associate with salmon data (Emma)\nDraft the code for visualization (Everyone)\n\nWeek 12:\n\nGet peer reviewed\nDraft writeup (Harper & Gus)\nFinalize code (Everyone)\n\nWeek 13:\n\nDevelop presentation (Emma)\nPresent the project\nContinue working on writeup (Everyone)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fish Populations and Fish and Game Regulation in Alaska",
    "section": "",
    "text": "Commercial fishing in Alaska is a huge industry, as salmon is the main export product of the state after oil and natural gas. Commercial fishing contributes ~5% of Alaska’s economy, and salmon harvest in Alaska accounts for ~80% of the total North American wild-caught salmon. Commercial fishing regulation changes combined with salmon habitat destruction and climate change leave fishermen and salmon enthusiasts constantly speculating about the effects of regulation changes on salmon populations.\nHowever, commercial salmon data is relatively inaccessible, and analysis of that data is even less accessible. Additionally, there is no existing public data set that examines the Alaska Fish and Game commercial fishing regulations. This project aims to give people a tool to examine the relationships between fish counts, permit/vessel/processor counts, and Fish and Game regulation sentiment analysis."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Fish Populations and Fish and Game Regulation in Alaska",
    "section": "",
    "text": "Commercial fishing in Alaska is a huge industry, as salmon is the main export product of the state after oil and natural gas. Commercial fishing contributes ~5% of Alaska’s economy, and salmon harvest in Alaska accounts for ~80% of the total North American wild-caught salmon. Commercial fishing regulation changes combined with salmon habitat destruction and climate change leave fishermen and salmon enthusiasts constantly speculating about the effects of regulation changes on salmon populations.\nHowever, commercial salmon data is relatively inaccessible, and analysis of that data is even less accessible. Additionally, there is no existing public data set that examines the Alaska Fish and Game commercial fishing regulations. This project aims to give people a tool to examine the relationships between fish counts, permit/vessel/processor counts, and Fish and Game regulation sentiment analysis."
  },
  {
    "objectID": "index.html#methods-data-wrangling",
    "href": "index.html#methods-data-wrangling",
    "title": "Fish Populations and Fish and Game Regulation in Alaska",
    "section": "Methods: Data Wrangling",
    "text": "Methods: Data Wrangling\nTo obtain the text data from the Alaska legislature on fishing, we scraped the website for all the bills within the “Fish and Game” subject. Using the rvest package and significant help from the Data Lab, we were able to scrape the site and create a data frame with each bill from each year on the subject of Fish and Game.\n\nlegis &lt;- read_csv(\"fish_and_game.csv\")\n\nRows: 428 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Name, Link, FULL_TEXT\ndbl (1): Legislature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(legis)\n\n# A tibble: 6 × 4\n  Legislature Name    Link                                             FULL_TEXT\n        &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;                                            &lt;chr&gt;    \n1          33 HB0020A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n2          33 HB0039A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n3          33 HB0040A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n4          33 HB0042A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n5          33 HB0054A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n6          33 HB0064A https://www.akleg.gov/basis/Bill/Text/33?Hsid=H… \"\\n\\r\\n0…\n\n\nWe then created a function which divided the legis dataset by line and subsetted it into the lines which contained a given keyword. The length of this subset was appended into a new dataframe providing the number of lines containing the keyword for each bill. This was then organized by year into legis_word_longer.\n\nleng &lt;- length(legis$Legislature)\n\ngetti &lt;- function(word){\n  word_freq &lt;- c()\n  for (i in 1:leng){ #looping through each bill\n    legis_line &lt;- legis$FULL_TEXT[i] %&gt;%\n    str_split(\"(?&lt;=\\\\.)\\\\s*\") %&gt;% \n    pluck(1) \n    word_freq_i &lt;- legis_line %&gt;%\n    str_subset(word) %&gt;%\n    length()\n    word_freq &lt;- append(word_freq, word_freq_i)\n  }\n  return(word_freq) #returns a vector of the keyword counts for each bill\n}\n\nlegis_word &lt;- legis %&gt;% \n  mutate(fish = getti(\"[F/f]ish\")) %&gt;%\n  mutate(fisheries = getti(\"[F/f]isher[ies/y]\")) %&gt;%\n  mutate(permit = getti(\"[P/p]ermit\")) %&gt;%\n  mutate(vessel = getti(\"[V/v]essel\")) %&gt;%\n  mutate(salmon = getti(\"[S/s]almon\")) %&gt;%\n  mutate(limit = getti(\"[L/l]imit\")) \nlegis_word_longer &lt;- legis_word %&gt;% \n  select(-FULL_TEXT) %&gt;%\n  pivot_longer(c('fish', 'fisheries', 'permit', 'vessel', 'salmon', 'limit'), names_to = \"word\", values_to = \"times_mentioned\") %&gt;%\n  mutate(Year = Legislature) %&gt;%\n  mutate(Year = case_when(\n    Legislature == 33 ~ 2023,\n    Legislature == 32 ~ 2021,\n    Legislature == 31 ~ 2019,\n    Legislature == 30 ~ 2017,\n    Legislature == 29 ~ 2015,\n    Legislature == 28 ~ 2013,\n    Legislature == 27 ~ 2011,\n    Legislature == 26 ~ 2009,\n    Legislature == 25 ~ 2007,\n    Legislature == 24 ~ 2005,\n    Legislature == 23 ~ 2003,\n    Legislature == 22 ~ 2001,\n    Legislature == 21 ~ 1999,\n    Legislature == 20 ~ 1997,\n    Legislature == 19 ~ 1995,\n    Legislature == 18 ~ 1993,\n    Legislature == 17 ~ 1991,\n    Legislature == 16 ~ 1989,\n    Legislature == 15 ~ 1987,\n    Legislature == 14 ~ 1985\n  ))\nhead(legis_word_longer)\n\n# A tibble: 6 × 6\n  Legislature Name    Link                           word  times_mentioned  Year\n        &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;                          &lt;chr&gt;           &lt;int&gt; &lt;dbl&gt;\n1          33 HB0020A https://www.akleg.gov/basis/B… fish                3  2023\n2          33 HB0020A https://www.akleg.gov/basis/B… fish…               3  2023\n3          33 HB0020A https://www.akleg.gov/basis/B… perm…               0  2023\n4          33 HB0020A https://www.akleg.gov/basis/B… vess…               0  2023\n5          33 HB0020A https://www.akleg.gov/basis/B… salm…               0  2023\n6          33 HB0020A https://www.akleg.gov/basis/B… limit               0  2023\n\n\nSalmon data was sourced from the Alaska Department of Fish and Game website, which contains a dataset that includes the following variables per fishing area per year:\n\nSalmon species (Chinook, Chum, Coho, Pink, Sockeye)\nNumber of fish landed\nTotal weight of fish landed\nNumber of issued commercial fishing permits\nNumber of commercial fishing processor boats\nNumber of commercial fishing vessels\n\n\nsalmon &lt;- read_csv(\"salmondata/rawsalmon.csv\")\n\nRows: 1902 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Area, Species Name\ndbl (7): Year, Number Of Fish (estimated), Landed Weight (lbs), Whole Weight...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsalmon &lt;- salmon %&gt;% rename(species = `Species Name`,\n                            num_fish = `Number Of Fish (estimated)`,\n                            land_weight = `Landed Weight (lbs)`,\n                            whole_weight = `Whole Weight (lbs)`,\n                            num_permit = `Permit Count`,\n                            num_processor = `Processor Count`,\n                            num_vessel = `Vessel Count`)\nwrite.csv(salmon, \"salmondata/salmon.csv\")\n\nThis data was then used to create a shiny app that allows users to compare all variables in the salmon data set with each other, with the ability to isolate by specific salmon species if they are more interested in one than the others. This shiny app was created using the code written above the app in results.\nWe also compared data on text with fish count and permit count data by creating overlapping time series, to allow for qualitative assessments of potentially significant patterns."
  },
  {
    "objectID": "index.html#results",
    "href": "index.html#results",
    "title": "Fish Populations and Fish and Game Regulation in Alaska",
    "section": "Results",
    "text": "Results\nA visualization of the word frequencies across all Alaska Department of Fish and Game bills shows that the words license, fisheries, conservation, and appropriations all appear more than 50,000 times cumulatively. This initial visualization shows the potential of our web-scraped word data frame from the fish and game regulations, and also shows that fish and game regulations appear to mention lots of commercial fishing-related topics.\n{fig-align=“center”, width = 300px}\nWe also found that the amount of different words used across time is variable, with large spikes in mentions of important fish related terms in 1998, 2005, 2017, and 2022.\n{fig-align=“center”, width = 300px} In the figure below, comparisons of fish count (blue histogram) and the amount of times that fish were mentioned in the legislature (black line) showed no significant similarities, except for an interesting peak in the amount of times fish were mentioned in 1998 co-occuring with a dip in fish count.\n{fig-align=“center”, width = 300px}\nIn the figure below, comparisons of fish count (blue histogram) and the amount of times that permits were mentioned in the legislature (black line) also showed no significant similarities.\n{fig-align=“center”, width = 300px}\nThe shiny app we created shows how fish count, fish weight, processor count, permit count, vessel count and others compare as well as how they change across time. Interestingly, permit count decreased across time but fish counts didn’t. This means perhaps that fish count per permit is increasing across time.\n\nui &lt;- page_sidebar(\n  sidebar = sidebar(\n    varSelectInput(\"xvar\", \"X variable\", salmon, selected = \"Year\"),\n    varSelectInput(\"yvar\", \"Y variable\", salmon, selected = \"num_fish\"),\n    checkboxGroupInput(\n      \"species\", \"Filter by species\",\n      choices = unique(salmon$species), \n      selected = unique(salmon$species)\n    ),\n    hr(), # Add a horizontal rule\n    checkboxInput(\"by_species\", \"Show species\", TRUE),\n  ),\n  plotOutput(\"distPlot\")\n)\n\nserver &lt;- function(input, output, session) {\n  subsetted &lt;- reactive({\n    req(input$species)\n    salmon |&gt; filter(species %in% input$species)\n  })\n  \n  output$distPlot &lt;- renderPlot({\n    p &lt;- ggplot(subsetted(), aes(!!input$xvar, !!input$yvar)) + list(\n      theme(legend.position = \"bottom\"),\n      if (input$by_species) aes(color = species),\n      geom_point(),\n      geom_smooth(method = 'lm')\n    )\n    \n    p\n  }, res = 100)\n}\n\nshinyApp(ui, server)"
  },
  {
    "objectID": "DataWrangling.html",
    "href": "DataWrangling.html",
    "title": "Project 2",
    "section": "",
    "text": "# Load necessary libraries\nlibrary(tidyverse)\nlibrary(tidytext)\nlibrary(textdata)\n\n\nsalmon &lt;- read_csv(\"salmondata/rawsalmon.csv\")\n\nRows: 1902 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Area, Species Name\ndbl (7): Year, Number Of Fish (estimated), Landed Weight (lbs), Whole Weight...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsalmon &lt;- salmon %&gt;% rename(species = `Species Name`,\n                            num_fish = `Number Of Fish (estimated)`,\n                            land_weight = `Landed Weight (lbs)`,\n                            whole_weight = `Whole Weight (lbs)`,\n                            num_permit = `Permit Count`,\n                            num_processor = `Processor Count`,\n                            num_vessel = `Vessel Count`)\nwrite.csv(salmon, \"salmondata/salmon.csv\")\n\n\nggplot(salmon, aes(x = Year, y = num_fish)) +\n  geom_col(stat = \"identity\", aes(fill = species), bins = 30) +\n  labs(y = \"Number of landed fish\")\n\nWarning in geom_col(stat = \"identity\", aes(fill = species), bins = 30):\nIgnoring unknown parameters: `stat` and `bins`\n\n\nWarning: Removed 284 rows containing missing values or values outside the scale range\n(`geom_col()`).\n\n\n\n\n\n\nfishes &lt;- data.frame(\n  legislature = c(18, 19, 20, 21, 22, 23, 24, 25, 26, 27), \n  fishcount = c(88, 133, 280, 149, 120, 54, 161, 91, 31, 22), \n  year = c(1993, 1995, 1997, 1999, 2001, 2003, 2005, 2007, 2009, 2011)\n)\n\nsockeye &lt;- salmon %&gt;%\n  filter(species == \"Sockeye Salmon\")\n\nfishsockeye &lt;- right_join(fishes, sockeye, by = c(\"year\" = \"Year\"))\nview(fishsockeye)\n\n\nfishandgame &lt;- read.csv(\"fish_and_game.csv\")\nfishandgame &lt;- fishandgame %&gt;%\n  mutate(Year = case_when(\n    Legislature == 33 ~ 2023,\n    Legislature == 32 ~ 2021,\n    Legislature == 31 ~ 2019,\n    Legislature == 30 ~ 2017,\n    Legislature == 29 ~ 2015,\n    Legislature == 28 ~ 2013,\n    Legislature == 27 ~ 2011,\n    Legislature == 26 ~ 2009,\n    Legislature == 25 ~ 2007,\n    Legislature == 24 ~ 2005,\n    Legislature == 23 ~ 2003,\n    Legislature == 22 ~ 2001,\n    Legislature == 21 ~ 1999,\n    Legislature == 20 ~ 1997,\n    Legislature == 19 ~ 1995,\n    Legislature == 18 ~ 1993,\n    Legislature == 17 ~ 1991,\n    Legislature == 16 ~ 1989,\n    Legislature == 15 ~ 1987,\n    Legislature == 14 ~ 1985,\n  ))\n\n\nfishandgame &lt;- fishandgame %&gt;%\n  mutate(FULL_TEXT = tolower(FULL_TEXT)) %&gt;%\n  mutate(FULL_TEXT = gsub(\"[[:punct:]]\", \"\", FULL_TEXT),\n         FULL_TEXT = str_replace_all(FULL_TEXT, \"\\\\b\\\\d+\\\\b\", \"\"),\n        FULL_TEXT = str_replace_all(FULL_TEXT, \"\\\\b\\\\w*\\\\d+\\\\w*\\\\b\", \"\"))\n\n\n tokenized_fishandgame &lt;- fishandgame %&gt;%\n  unnest_tokens(word, FULL_TEXT)\n \n data(\"stop_words\")\n stopfishandgame &lt;- tokenized_fishandgame %&gt;%\n   anti_join(stop_words)\n\nJoining with `by = join_by(word)`\n\nsalmontextanalysisdf &lt;- inner_join(stopfishandgame, salmon, by = \"Year\")\n\nWarning in inner_join(stopfishandgame, salmon, by = \"Year\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1862 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nthreshold &lt;- 50000\n\nsalmontextanalysisdf %&gt;%\n  count(word, sort = TRUE) %&gt;%\n  filter(n &gt; threshold) %&gt;%\n  ggplot(aes(y = fct_reorder(word, n), x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  labs(\n    title = \"Frequency of words in Alaska Department of Fish and Game bills\",\n    subtitle = \"Words occurring more than 50,000 times\",\n    y = NULL, x = NULL\n  )\n\n\n\n\n\nlegis &lt;- read_csv(\"fish_and_game.csv\")\n\nRows: 428 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Name, Link, FULL_TEXT\ndbl (1): Legislature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nleng &lt;- length(legis$Legislature)\n\ngetti &lt;- function(word){\n  word_freq &lt;- c()\n  for (i in 1:leng){ \n    legis_line &lt;- legis$FULL_TEXT[i] %&gt;%\n    str_split(\"(?&lt;=\\\\.)\\\\s*\") %&gt;% # specify the end-of-line character(s)\n    pluck(1) \n    word_freq_i &lt;- legis_line %&gt;%\n    str_subset(word) %&gt;%\n    length()\n    #message(word_freq_i) #only to check it works\n    word_freq &lt;- append(word_freq, word_freq_i)\n  }\n  return(word_freq)\n}\n\nlegis_word &lt;- legis %&gt;%\n  mutate(fish = getti(\"[F/f]ish\")) %&gt;%\n  mutate(fisheries = getti(\"[F/f]isher[ies/y]\")) %&gt;%\n  mutate(permit = getti(\"[P/p]ermit\")) %&gt;%\n  mutate(vessel = getti(\"[V/v]essel\")) %&gt;%\n  mutate(salmon = getti(\"[S/s]almon\")) %&gt;%\n  mutate(limit = getti(\"[L/l]imit\")) \nlegis_word_longer &lt;- legis_word %&gt;% \n  select(-FULL_TEXT) %&gt;%\n  pivot_longer(c('fish', 'fisheries', 'permit', 'vessel', 'salmon', 'limit'), names_to = \"word\", values_to = \"times_mentioned\") %&gt;%\n  mutate(Year = Legislature) %&gt;%\n  mutate(Year = case_when(\n    Legislature == 33 ~ 2023,\n    Legislature == 32 ~ 2021,\n    Legislature == 31 ~ 2019,\n    Legislature == 30 ~ 2017,\n    Legislature == 29 ~ 2015,\n    Legislature == 28 ~ 2013,\n    Legislature == 27 ~ 2011,\n    Legislature == 26 ~ 2009,\n    Legislature == 25 ~ 2007,\n    Legislature == 24 ~ 2005,\n    Legislature == 23 ~ 2003,\n    Legislature == 22 ~ 2001,\n    Legislature == 21 ~ 1999,\n    Legislature == 20 ~ 1997,\n    Legislature == 19 ~ 1995,\n    Legislature == 18 ~ 1993,\n    Legislature == 17 ~ 1991,\n    Legislature == 16 ~ 1989,\n    Legislature == 15 ~ 1987,\n    Legislature == 14 ~ 1985\n  ))\n\n\nwordplot &lt;- ggplot(data = legis_word_longer, aes(x = Year, y = times_mentioned, fill = word)) +\n  geom_bar(position='stack', stat='identity') +\n  theme_minimal() + \n  labs(\n    title = \"Frequency of Keywords in Alaska State Legislature by Year\", \n    x = \"Year\", \n    y = \"Frequency\"\n  )\nwordplot\n\n\n\n\n\nyearly_word &lt;- legis_word_longer %&gt;%\n  group_by(Year, word) %&gt;%\n  summarise(count = sum(times_mentioned))\n\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n\nglimpse(yearly_word)\n\nRows: 96\nColumns: 3\nGroups: Year [16]\n$ Year  &lt;dbl&gt; 1993, 1993, 1993, 1993, 1993, 1993, 1995, 1995, 1995, 1995, 1995…\n$ word  &lt;chr&gt; \"fish\", \"fisheries\", \"limit\", \"permit\", \"salmon\", \"vessel\", \"fis…\n$ count &lt;int&gt; 92, 8, 1, 18, 7, 0, 138, 10, 8, 60, 16, 0, 317, 91, 38, 103, 7, …\n\n\n\nyearlyplot &lt;- ggplot(data = yearly_word, aes(x = Year, y = count, color = word)) +\n  geom_line() +\n  theme_minimal() + \n  labs(\n    title = \"Frequency of Keywords in Alaska State Legislature by Year\", \n    x = \"Year\", \n    y = \"Frequency\"\n  )\nyearlyplot\n\n\n\nggsave(\"yearlyplot.png\", yearlyplot)\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "presentation.html#background",
    "href": "presentation.html#background",
    "title": "Bristol Bay Salmon",
    "section": "Background",
    "text": "Background\nCommercial fishing in Alaska is a huge industry, as salmon is the main export product of the state after oil and natural gas. Commercial fishing contributes ~5% of Alaska’s economy.\nSalmon harvest in Alaska accounts for ~80% of the total North American wild-caught salmon.\nCommercial fishing regulation changes combined with salmon habitat destruction and climate change leave fishermen constantly speculating about the effects of regulation changes on salmon populations."
  },
  {
    "objectID": "presentation.html#methods-salmon-data-text-analysis",
    "href": "presentation.html#methods-salmon-data-text-analysis",
    "title": "Bristol Bay Salmon",
    "section": "Methods: Salmon Data, Text Analysis",
    "text": "Methods: Salmon Data, Text Analysis\nSalmon data from Alaska Department of Fish and Game\n-every observation is one species of fish in one area of Alaska during one year\n-number of fish, landed weight of fish, number of commercial fishing permits issued, number of processors, number of fishing vessels"
  },
  {
    "objectID": "presentation.html#methods-salmon-data-text-analysis-1",
    "href": "presentation.html#methods-salmon-data-text-analysis-1",
    "title": "Bristol Bay Salmon",
    "section": "Methods: Salmon Data, Text Analysis",
    "text": "Methods: Salmon Data, Text Analysis\nCommercial fishing regulation data in Alaska doesn’t exist, but\nThe AK Legislature has a system of websites that show every single resolution and bill passed from the 18th legislature (1993) to the 33rd legislature (2023)."
  },
  {
    "objectID": "presentation.html#methods-salmon-data-text-analysis-2",
    "href": "presentation.html#methods-salmon-data-text-analysis-2",
    "title": "Bristol Bay Salmon",
    "section": "Methods: Salmon Data, Text Analysis",
    "text": "Methods: Salmon Data, Text Analysis"
  },
  {
    "objectID": "presentation.html#results-salmon-data",
    "href": "presentation.html#results-salmon-data",
    "title": "Bristol Bay Salmon",
    "section": "Results: Salmon Data",
    "text": "Results: Salmon Data"
  },
  {
    "objectID": "presentation.html#results-salmon-data-1",
    "href": "presentation.html#results-salmon-data-1",
    "title": "Bristol Bay Salmon",
    "section": "Results: Salmon Data",
    "text": "Results: Salmon Data"
  },
  {
    "objectID": "presentation.html#results-shiny-app",
    "href": "presentation.html#results-shiny-app",
    "title": "Bristol Bay Salmon",
    "section": "Results: Shiny App",
    "text": "Results: Shiny App"
  },
  {
    "objectID": "harpers stuff.html",
    "href": "harpers stuff.html",
    "title": "Untitled",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\n\n\nlegis &lt;- read_csv(\"fish_and_game.csv\")\n\nRows: 428 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Name, Link, FULL_TEXT\ndbl (1): Legislature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nview(legis)\nlegis_line &lt;- legis$FULL_TEXT[7] %&gt;%\n  str_split(\"(?&lt;=\\\\.)\\\\s*\") %&gt;% # specify the end-of-line character(s)\n  pluck(1) \nlegis_7 &lt;- legis_line %&gt;%\n  str_subset(\"fish\")\nview(legis_7)\n\n\ncombined_legis &lt;- legis %&gt;%\n  group_by(Legislature) %&gt;%\n  summarise(Combined_Text = paste(FULL_TEXT, collapse = \" ! \"))\n\nlineee &lt;- combined_legis$Combined_Text[10] %&gt;%\n  str_split(\"(?&lt;=\\\\.)\\\\s*\") %&gt;% # specify the end-of-line character(s)\n  pluck(1) \nlegis_1 &lt;- lineee %&gt;%\n  str_subset(\"fish\")\nlength(legis_1)\n\n[1] 22\n\n\n\nfishes &lt;- data.frame(\n  legislature = c(18, 19, 20, 21, 22, 23, 24, 25, 26, 27), \n  fishcount = c(88, 133, 280, 149, 120, 54, 161, 91, 31, 22), \n  year = c(1993, 1995, 1997, 1999, 2001, 2003, 2005, 2007, 2009, 2011)\n)\nplot &lt;- ggplot(data = fishes, aes(x = legislature, y = fishcount)) + \n  geom_line() +\n  scale_x_continuous(breaks = c(18, 19, 20, 21, 22, 23, 24, 25, 26, 27)) +\n  labs(\n    title = \"Times 'fish' is mentioned in Alaska legislature from 1993-2012\", \n    y = \"'fish' mentioned\", \n    x = \"Legislature number\"\n  )\nplot\n\n\n\n\n\nsalmon &lt;- read_csv(\"salmondata/salmon.csv\")\n\nNew names:\nRows: 1902 Columns: 10\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): Area, species dbl (8): ...1, Year, num_fish, land_weight, whole_weight,\nnum_permit, num_pr...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...1`\n\nview(salmon)\n\n\nlegis &lt;- read_csv(\"fish_and_game.csv\")\n\nRows: 428 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): Name, Link, FULL_TEXT\ndbl (1): Legislature\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nleng &lt;- length(legis$Legislature)\n\ngetti &lt;- function(word){\n  word_freq &lt;- c()\n  for (i in 1:leng){ \n    legis_line &lt;- legis$FULL_TEXT[i] %&gt;%\n    str_split(\"(?&lt;=\\\\.)\\\\s*\") %&gt;% # specify the end-of-line character(s)\n    pluck(1) \n    word_freq_i &lt;- legis_line %&gt;%\n    str_subset(word) %&gt;%\n    length()\n    #message(word_freq_i) #only to check it works\n    word_freq &lt;- append(word_freq, word_freq_i)\n  }\n  return(word_freq)\n}\n\nlegis_word &lt;- legis %&gt;%\n  mutate(fish = getti(\"[F/f]ish\")) %&gt;%\n  mutate(fisheries = getti(\"[F/f]isher[ies/y]\")) %&gt;%\n  mutate(permit = getti(\"[P/p]ermit\")) %&gt;%\n  mutate(vessel = getti(\"[V/v]essel\")) %&gt;%\n  mutate(salmon = getti(\"[S/s]almon\")) %&gt;%\n  mutate(limit = getti(\"[L/l]imit\")) \nlegis_word_longer &lt;- legis_word %&gt;% \n  select(-FULL_TEXT) %&gt;%\n  pivot_longer(c('fish', 'fisheries', 'permit', 'vessel', 'salmon', 'limit'), names_to = \"word\", values_to = \"times_mentioned\") %&gt;%\n  mutate(Year = Legislature) %&gt;%\n  mutate(Year = case_when(\n    Legislature == 33 ~ 2023,\n    Legislature == 32 ~ 2021,\n    Legislature == 31 ~ 2019,\n    Legislature == 30 ~ 2017,\n    Legislature == 29 ~ 2015,\n    Legislature == 28 ~ 2013,\n    Legislature == 27 ~ 2011,\n    Legislature == 26 ~ 2009,\n    Legislature == 25 ~ 2007,\n    Legislature == 24 ~ 2005,\n    Legislature == 23 ~ 2003,\n    Legislature == 22 ~ 2001,\n    Legislature == 21 ~ 1999,\n    Legislature == 20 ~ 1997,\n    Legislature == 19 ~ 1995,\n    Legislature == 18 ~ 1993,\n    Legislature == 17 ~ 1991,\n    Legislature == 16 ~ 1989,\n    Legislature == 15 ~ 1987,\n    Legislature == 14 ~ 1985\n  ))\n\n\nwordplot &lt;- ggplot(data = legis_word_longer, aes(x = Year, y = times_mentioned, fill = word)) +\n  geom_bar(position='stack', stat='identity') +\n  theme_minimal() + \n  labs(\n    title = \"Frequency of Keywords in Alaska State Legislature by Year\", \n    x = \"Year\", \n    y = \"Frequency\"\n  )\nwordplot\n\n\n\n\n\nyearly_word &lt;- legis_word_longer %&gt;%\n  group_by(Year, word) %&gt;%\n  summarise(count = sum(times_mentioned))\n\n`summarise()` has grouped output by 'Year'. You can override using the\n`.groups` argument.\n\nglimpse(yearly_word)\n\nRows: 96\nColumns: 3\nGroups: Year [16]\n$ Year  &lt;dbl&gt; 1993, 1993, 1993, 1993, 1993, 1993, 1995, 1995, 1995, 1995, 1995…\n$ word  &lt;chr&gt; \"fish\", \"fisheries\", \"limit\", \"permit\", \"salmon\", \"vessel\", \"fis…\n$ count &lt;int&gt; 92, 8, 1, 18, 7, 0, 138, 10, 8, 60, 16, 0, 317, 91, 38, 103, 7, …\n\n\n\nyearlyplot &lt;- ggplot(data = yearly_word, aes(x = Year, y = count, color = word)) +\n  geom_line() +\n  theme_minimal() + \n  labs(\n    title = \"Frequency of Keywords in Alaska State Legislature by Year\", \n    x = \"Year\", \n    y = \"Frequency\"\n  )\nyearlyplot\n\n\n\n\n\nscaled_legis_word &lt;- legis_word %&gt;%\n  select(-FULL_TEXT) %&gt;% \n  mutate(fish = scale(fish), \n         fisheries = scale(fisheries), \n         limit = scale(limit), \n         permit = scale(permit), \n         salmon = scale(salmon), \n         vessel = scale(vessel)\n  ) %&gt;%\n  pivot_longer(c('fish', 'fisheries', 'permit', 'vessel', 'salmon', 'limit'), names_to = \"word\", values_to = \"times_mentioned\") %&gt;%\n  mutate(Year = Legislature) %&gt;%\n  mutate(Year = case_when(\n    Legislature == 33 ~ 2023,\n    Legislature == 32 ~ 2021,\n    Legislature == 31 ~ 2019,\n    Legislature == 30 ~ 2017,\n    Legislature == 29 ~ 2015,\n    Legislature == 28 ~ 2013,\n    Legislature == 27 ~ 2011,\n    Legislature == 26 ~ 2009,\n    Legislature == 25 ~ 2007,\n    Legislature == 24 ~ 2005,\n    Legislature == 23 ~ 2003,\n    Legislature == 22 ~ 2001,\n    Legislature == 21 ~ 1999,\n    Legislature == 20 ~ 1997,\n    Legislature == 19 ~ 1995,\n    Legislature == 18 ~ 1993,\n    Legislature == 17 ~ 1991,\n    Legislature == 16 ~ 1989,\n    Legislature == 15 ~ 1987,\n    Legislature == 14 ~ 1985\n  ))\n\nscaleplot &lt;- ggplot(data = scaled_legis_word, aes(x = Year, y = times_mentioned, fill = word)) +\n  geom_bar(position='stack', stat='identity') +\n  theme_minimal() + \n  labs(\n    title = \"Frequency of Keywords in Alaska State Legislature by Year\", \n    x = \"Year\", \n    y = \"Frequency\"\n  )\nscaleplot"
  },
  {
    "objectID": "shinyapp.html",
    "href": "shinyapp.html",
    "title": "Fish Shiny App",
    "section": "",
    "text": "shiny_app_ui &lt;- page_sidebar(\n  sidebar = sidebar(\n    varSelectInput(\"xvar\", \"X variable\", salmon, selected = \"Year\"),\n    varSelectInput(\"yvar\", \"Y variable\", salmon, selected = \"num_fish\"),\n    checkboxGroupInput(\n      \"species\", \"Filter by species\",\n      choices = unique(salmon$species), \n      selected = unique(salmon$species)\n    ),\n    hr(), # Add a horizontal rule\n    checkboxInput(\"by_species\", \"Show species\", TRUE),\n  ),\n  plotOutput(\"distPlot\")\n)\n\n\nshiny_app_server &lt;- function(input, output, session) {\n  subsetted &lt;- reactive({\n    req(input$species)\n    salmon |&gt; filter(species %in% input$species)\n  })\n  \n  output$distPlot &lt;- renderPlot({\n    p &lt;- ggplot(subsetted(), aes(!!input$xvar, !!input$yvar)) + list(\n      theme(legend.position = \"bottom\"),\n      if (input$by_species) aes(color = species),\n      geom_point(),\n      geom_smooth(method = 'lm')\n    )\n    \n    p\n  }, res = 100)\n}\n\n\nshiny::shinyApp(ui = shiny_app_ui, server = shiny_app_server)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Salmon of Bristol Bay",
    "section": "",
    "text": "This project was developed by Gus Compton, Emma Campbell, and Harper Lethin for MATH/STAT241 at Reed College."
  }
]